for i in range(0, 10):
  print i,
print
  
# Now by doing placing a pound sign in front of a sql tag, the rest of the line
# and following sql insertion will be ignored.

# AND NO USING sql(COLON) inside of python comments, it still gets executed even if it's
# under a python comment.

#sql:
  CREATE TABLE neverBuild ( blah VARCHAR(5) )
  INSERT INTO neverBuild VALUES ('NOPE')
:sql

sql:
  CReAtE TaBLE Firsts ( 
    name vaRchar(5)
  )
  INSERT InTO Firsts VAluES ('Phil')
  INSERT INTO Firsts VALUES ('Matthew')
  INSERT INTO Firsts VALUES ('Joaquin')
:sql

sql:
  CREATE TABLE Customers ( 
    name VARCHAR(100) ,
    last VARCHAR(7) 
  )
  INSERT INTO Customers VALUES ('Phil', 'Cannata')
  INSERT INTO Customers VALUES ('Matthew', 'Clarkson')
  INSERT INTO Customers VALUES ('Joaquin', 'Casares')
:sql

sql:
  CREATE TABLE intVals ( 
    val int
  )
:sql

list = sql:TRIPLES:sql

for i in sql:TRIPLES:sql:
  print i
  
print sql:
SELECT name
FROM Customers
:sql

print sql:
SELECT name, last
FROM Customers
:sql

print sql:
SELECT *
FROM Customers
:sql

sql: 
DROP INDEX name ON Customers 
DROP INDEX blah ON Customers 
DROP TABLE Customers
DROP TABLE Nope
TRUNCATE TABLE Firsts
:sql

sql:
  CREATE TABLE Customers ( 
    name VARCHAR(100) ,
    last VARCHAR(15),
    phone int
  )
  INSERT INTO Customers VALUES ('Phil', 'Cannata', 7735647)
  INSERT INTO Customers VALUES ('Matthew', 'Clarkson', 9875643)
  INSERT INTO Customers VALUES ('Joaquin', 'Casares', 3451878)
  INSERT INTO Customers VALUES ('Joaquin', 'Joaquin', 9345879)
  INSERT INTO Customers VALUES ('Joaquin', 'Joaquin', 5123789)
  INSERT INTO Customers VALUES ('Joaquin', 'Guadalupe', 8845748)
:sql
sql:
  SELECT DISTINCT name, last FROM Customers
:sql
sql:
  SELECT DISTINCT name FROM Customers
:sql
sql:
  SELECT name, last, phone FROM Customers WHERE phone > 6001234
:sql

sql:
  SELECT name, last, phone FROM Customers WHERE phone <> 7735647
:sql

print
sql: PRINT SELECT *
FROM Customers
:sql
print

for a in range(0, 10):
  print a,
print